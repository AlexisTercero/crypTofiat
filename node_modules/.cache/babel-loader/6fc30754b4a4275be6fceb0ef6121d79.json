{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulario = () => {\n  _s();\n\n  //state del listado criptomonedas\n  const [listacripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false);\n  const MONEDAS = [{\n    codigo: \"USD\",\n    nombre: \"Dolar Estadounidense\"\n  }, {\n    codigo: \"ARS\",\n    nombre: \"Peso Argento\"\n  }, {\n    codigo: \"MXN\",\n    nombre: \"Peso Mexicano\"\n  }, {\n    codigo: \"EUR\",\n    nombre: \"Euro\"\n  }, {\n    codigo: \"GBP\",\n    nombre: \"Libra Esterlina\"\n  }]; //Utlizar useMoneda\n\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu moneda\", \"\", MONEDAS); //Utilizar useCriptomoneda\n\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\"Elige tu Criptomoneda\", \"\", listacripto); //Ejecutar llamado a la API\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n      const resultado = await axios.get(url);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n\n    consultarAPI();\n  }, []); // Cuando usuario hace submit\n\n  const cotizarMoneda = e => {\n    e.preventDefault(); // Validar si ambos campos estan llenos\n\n    if (moneda === \"\" || criptomoneda === \"\") {\n      guardarError(true);\n      return;\n    } //pasar los datos al componente principal\n\n\n    guardarError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: cotizarMoneda,\n    children: [error ? \"Hay un error\" : null, /*#__PURE__*/_jsxDEV(SelectMonedas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectCripto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Boton, {\n      type: \"submit\",\n      value: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Formulario, \"AhYsDl5E8TefvDdRb20//PFlbkg=\", false, function () {\n  return [useMoneda, useCriptomoneda];\n});\n\n_c = Formulario;\nexport default Formulario;\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: grey;\n    border: none;\n    width: 100%;\n    border-radius: 6px;\n    color: black;\n    transition: background-color .3s ease;\n\n    &:hover {\n        background-color: yellow;\n        color: black;\n        cursor:pointer;\n    }\n\n`;\n_c2 = Boton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Formulario\");\n$RefreshReg$(_c2, \"Boton\");","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/components/Formulario.js"],"names":["React","useEffect","useState","styled","useMoneda","useCriptomoneda","axios","Formulario","listacripto","guardarCriptomonedas","error","guardarError","MONEDAS","codigo","nombre","moneda","SelectMonedas","criptomoneda","SelectCripto","consultarAPI","url","resultado","get","data","Data","cotizarMoneda","e","preventDefault","Boton","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAAEC,WAAF,EAAeC,oBAAf,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAEQ,KAAF,EAASC,YAAT,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMU,OAAO,GAAG,CACZ;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GADY,EAEZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAFY,EAGZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAHY,EAIZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAJY,EAKZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GALY,CAAhB,CALqB,CAcrB;;AACA,QAAM,CAAEC,MAAF,EAAUC,aAAV,IAA2BZ,SAAS,CAAC,iBAAD,EAAoB,EAApB,EAAwBQ,OAAxB,CAA1C,CAfqB,CAgBtB;;AACC,QAAM,CAAEK,YAAF,EAAgBC,YAAhB,IAAiCb,eAAe,CAAC,uBAAD,EAAyB,EAAzB,EAA6BG,WAA7B,CAAtD,CAjBqB,CAkBrB;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,YAAY,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,yEAAZ;AAEA,YAAMC,SAAS,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUF,GAAV,CAAxB;AAEAX,MAAAA,oBAAoB,CAACY,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAApB;AACH,KAND;;AAOAL,IAAAA,YAAY;AACf,GATQ,EASN,EATM,CAAT,CAnBqB,CA8BrB;;AACA,QAAMM,aAAa,GAAGC,CAAC,IAAG;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CAGtB;;AACA,QAAGZ,MAAM,KAAK,EAAX,IAAiBE,YAAY,KAAK,EAArC,EAAwC;AACpCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH,KAPqB,CAQtB;;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAVD;;AAWA,sBACI;AACI,IAAA,QAAQ,EAAEc,aADd;AAAA,eAGKf,KAAK,GAAG,cAAH,GAAkB,IAH5B,eAII,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxDD;;GAAMH,U;UAe+BH,S,EAEMC,e;;;KAjBrCE,U;AA0DN,eAAeA,UAAf;AAEA,MAAMqB,KAAK,GAAGzB,MAAM,CAAC0B,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,K","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\"\nimport useCriptomoneda from \"../hooks/useCriptomoneda\"\nimport axios from \"axios\";\n\n\nconst Formulario = () => {\n    //state del listado criptomonedas\n    const [ listacripto, guardarCriptomonedas ] = useState([]);\n    const [ error, guardarError ] = useState(false);\n\n    const MONEDAS = [\n        { codigo: \"USD\", nombre: \"Dolar Estadounidense\" },\n        { codigo: \"ARS\", nombre: \"Peso Argento\" },\n        { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\n        { codigo: \"EUR\", nombre: \"Euro\" },\n        { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\n    ]\n\n\n    //Utlizar useMoneda\n    const [ moneda, SelectMonedas ]= useMoneda(\"Elige tu moneda\", \"\", MONEDAS);\n   //Utilizar useCriptomoneda\n    const [ criptomoneda, SelectCripto ] = useCriptomoneda(\"Elige tu Criptomoneda\",\"\", listacripto);\n    //Ejecutar llamado a la API\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\"\n\n            const resultado = await axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data)            \n        }\n        consultarAPI();\n    }, []);\n\n    // Cuando usuario hace submit\n    const cotizarMoneda = e =>{\n        e.preventDefault();\n    \n        // Validar si ambos campos estan llenos\n        if(moneda === \"\" || criptomoneda === \"\"){\n            guardarError(true);\n            return;\n        }\n        //pasar los datos al componente principal\n        guardarError(false);\n    }\n    return (  \n        <form\n            onSubmit={cotizarMoneda}\n        >\n            {error ? \"Hay un error\":null}\n            <SelectMonedas />\n            <SelectCripto />\n\n            <Boton \n                type=\"submit\"\n                value=\"Calcular\"\n            />\n        </form>\n    )\n}\n\nexport default Formulario\n\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: grey;\n    border: none;\n    width: 100%;\n    border-radius: 6px;\n    color: black;\n    transition: background-color .3s ease;\n\n    &:hover {\n        background-color: yellow;\n        color: black;\n        cursor:pointer;\n    }\n\n`"]},"metadata":{},"sourceType":"module"}