{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/hooks/useMoneda.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  _s();\n\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => actualizarState(e.target.value),\n      value: state,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"- Select -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), opciones.map(opcion => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opcion.codigo,\n        children: opcion.nombre\n      }, opcion.codigo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this); //Retornar state, interfaz y funcion que modifica el state.\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\n_s(useMoneda, \"1776uhJgKLksmDNg8QZIgfuVZfc=\");\n\nexport default useMoneda;","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","useMoneda","label","stateInicial","opciones","state","actualizarState","Seleccionar","e","target","value","map","opcion","codigo","nombre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC;AAAA;;AACjD;AACA,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BN,QAAQ,CAACG,YAAD,CAAzC;;AAEA,QAAMI,WAAW,GAAG,mBAChB,QAAC,QAAD;AAAA,4BACG;AAAA,gBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,YADH,eAEI;AACI,MAAA,QAAQ,EAAGM,CAAC,IAAIF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;AAEI,MAAA,KAAK,EAAEL,KAFX;AAAA,8BAII;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKD,QAAQ,CAACO,GAAT,CAAaC,MAAM,iBAChB;AAA4B,QAAA,KAAK,EAAEA,MAAM,CAACC,MAA1C;AAAA,kBAAmDD,MAAM,CAACE;AAA1D,SAAaF,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAJiD,CAkBjD;;;AACA,SAAO,CAACR,KAAD,EAAQE,WAAR,EAAqBD,eAArB,CAAP;AACH,CApBD;;GAAML,S;;AAsBN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\n\nconst useMoneda = (label, stateInicial, opciones) => {\n    //State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const Seleccionar = () => (\n        <Fragment>\n           <label>{label}</label> \n            <select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">- Select -</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\n                ))}\n            </select> \n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state.\n    return [state, Seleccionar, actualizarState]\n}\n\nexport default useMoneda;\n"]},"metadata":{},"sourceType":"module"}