{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/hooks/useMoneda.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useMoneda = (label, stateInicial) => {\n  _s();\n\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MXN\",\n        children: \"Peso Mexicano\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this); //Retornar state, interfaz y funcion que modifica el state.\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\n_s(useMoneda, \"1776uhJgKLksmDNg8QZIgfuVZfc=\");\n\nexport default useMoneda;","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","useMoneda","label","stateInicial","state","actualizarState","Seleccionar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;AAAA;;AACvC;AACA,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BL,QAAQ,CAACG,YAAD,CAAzC;;AAEA,QAAMG,WAAW,GAAG,mBAChB,QAAC,QAAD;AAAA,4BACG;AAAA,gBAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA,YADH,eAEI;AAAA,6BACI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAJuC,CAYvC;;;AACA,SAAO,CAACE,KAAD,EAAQE,WAAR,EAAqBD,eAArB,CAAP;AACH,CAdD;;GAAMJ,S;;AAgBN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\n\nconst useMoneda = (label, stateInicial) => {\n    //State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const Seleccionar = () => (\n        <Fragment>\n           <label>{label}</label> \n            <select>\n                <option value=\"MXN\">Peso Mexicano</option>\n            </select> \n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state.\n    return [state, Seleccionar, actualizarState]\n}\n\nexport default useMoneda;\n"]},"metadata":{},"sourceType":"module"}