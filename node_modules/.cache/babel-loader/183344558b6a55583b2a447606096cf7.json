{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\nimport Error from \"./Error\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulario = ({\n  guardarMoneda,\n  guardarCriptomoneda\n}) => {\n  _s();\n\n  //state del listado criptomonedas\n  const [listacripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false);\n  const MONEDAS = [{\n    codigo: \"USD\",\n    nombre: \"Dolar Estadounidense\"\n  }, {\n    codigo: \"ARS\",\n    nombre: \"Peso Argento\"\n  }, {\n    codigo: \"MXN\",\n    nombre: \"Peso Mexicano\"\n  }, {\n    codigo: \"EUR\",\n    nombre: \"Euro\"\n  }, {\n    codigo: \"GBP\",\n    nombre: \"Libra Esterlina\"\n  }]; //Utlizar useMoneda\n\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu moneda\", \"\", MONEDAS); //Utilizar useCriptomoneda\n\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\"Elige tu Criptomoneda\", \"\", listacripto); //Ejecutar llamado a la API\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n      const resultado = await axios.get(url);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n\n    consultarAPI();\n  }, []); // Cuando usuario hace submit\n\n  const cotizarMoneda = e => {\n    e.preventDefault(); // Validar si ambos campos estan llenos\n\n    if (moneda === \"\" || criptomoneda === \"\") {\n      guardarError(true);\n      return;\n    } //pasar los datos al componente principal\n\n\n    guardarError(false);\n    guardarMoneda(moneda);\n    guardarCriptomoneda(criptomoneda);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: cotizarMoneda,\n    children: [error ? /*#__PURE__*/_jsxDEV(Error, {\n      mensaje: \"Todos los campos son obligatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(SelectCripto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectMonedas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Boton, {\n      type: \"submit\",\n      value: \"CONVERT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Formulario, \"AhYsDl5E8TefvDdRb20//PFlbkg=\", false, function () {\n  return [useMoneda, useCriptomoneda];\n});\n\n_c = Formulario;\nexport default Formulario;\nconst Boton = styled.input`\n    margin-top: 36px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: transparent;\n    border: 2px solid blue;\n    width: 100%;\n    color: grey;\n    transition: background-color .3s ease;\n\n\n    &:hover {\n        background-color: transparent;\n        color: white;\n        cursor:pointer;\n    }\n\n    &:focus-visible{\n        outline:0.3px solid rgba(49, 216, 255, 0.9);\n    }\n`;\n_c2 = Boton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Formulario\");\n$RefreshReg$(_c2, \"Boton\");","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/04-CRYPTO/crypto-price-quote/src/components/Formulario.js"],"names":["React","useEffect","useState","styled","useMoneda","useCriptomoneda","Error","axios","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","MONEDAS","codigo","nombre","moneda","SelectMonedas","criptomoneda","SelectCripto","consultarAPI","url","resultado","get","data","Data","cotizarMoneda","e","preventDefault","Boton","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAA0C;AAAA;;AACzD;AACA,QAAM,CAAEC,WAAF,EAAeC,oBAAf,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAEW,KAAF,EAASC,YAAT,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMa,OAAO,GAAG,CACZ;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GADY,EAEZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAFY,EAGZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAHY,EAIZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAJY,EAKZ;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GALY,CAAhB,CALyD,CAczD;;AACA,QAAM,CAAEC,MAAF,EAAUC,aAAV,IAA2Bf,SAAS,CAAC,iBAAD,EAAoB,EAApB,EAAwBW,OAAxB,CAA1C,CAfyD,CAgB1D;;AACC,QAAM,CAAEK,YAAF,EAAgBC,YAAhB,IAAiChB,eAAe,CAAC,uBAAD,EAAyB,EAAzB,EAA6BM,WAA7B,CAAtD,CAjByD,CAkBzD;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,YAAY,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,yEAAZ;AAEA,YAAMC,SAAS,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUF,GAAV,CAAxB;AAEAX,MAAAA,oBAAoB,CAACY,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAApB;AACH,KAND;;AAOAL,IAAAA,YAAY;AACf,GATQ,EASN,EATM,CAAT,CAnByD,CA8BzD;;AACA,QAAMM,aAAa,GAAGC,CAAC,IAAG;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CAGtB;;AACA,QAAGZ,MAAM,KAAK,EAAX,IAAiBE,YAAY,KAAK,EAArC,EAAwC;AACpCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH,KAPqB,CAQtB;;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,IAAAA,aAAa,CAACS,MAAD,CAAb;AACAR,IAAAA,mBAAmB,CAACU,YAAD,CAAnB;AACH,GAZD;;AAaA,sBACI;AACI,IAAA,QAAQ,EAAEQ,aADd;AAAA,eAGKf,KAAK,gBAAE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAF,GAAwD,IAHlE,eAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzDD;;GAAML,U;UAe+BJ,S,EAEMC,e;;;KAjBrCG,U;AA2DN,eAAeA,UAAf;AAEA,MAAMuB,KAAK,GAAG5B,MAAM,CAAC6B,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;MAAMD,K","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\"\nimport useCriptomoneda from \"../hooks/useCriptomoneda\"\nimport Error from \"./Error\";\nimport axios from \"axios\";\n\n\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\n    //state del listado criptomonedas\n    const [ listacripto, guardarCriptomonedas ] = useState([]);\n    const [ error, guardarError ] = useState(false);\n\n    const MONEDAS = [\n        { codigo: \"USD\", nombre: \"Dolar Estadounidense\" },\n        { codigo: \"ARS\", nombre: \"Peso Argento\" },\n        { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\n        { codigo: \"EUR\", nombre: \"Euro\" },\n        { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\n    ]\n\n\n    //Utlizar useMoneda\n    const [ moneda, SelectMonedas ]= useMoneda(\"Elige tu moneda\", \"\", MONEDAS);\n   //Utilizar useCriptomoneda\n    const [ criptomoneda, SelectCripto ] = useCriptomoneda(\"Elige tu Criptomoneda\",\"\", listacripto);\n    //Ejecutar llamado a la API\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\"\n\n            const resultado = await axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data)            \n        }\n        consultarAPI();\n    }, []);\n\n    // Cuando usuario hace submit\n    const cotizarMoneda = e =>{\n        e.preventDefault();\n    \n        // Validar si ambos campos estan llenos\n        if(moneda === \"\" || criptomoneda === \"\"){\n            guardarError(true);\n            return;\n        }\n        //pasar los datos al componente principal\n        guardarError(false);\n        guardarMoneda(moneda);\n        guardarCriptomoneda(criptomoneda);\n    }\n    return (  \n        <form\n            onSubmit={cotizarMoneda}\n        >\n            {error ?<Error mensaje=\"Todos los campos son obligatorios\" />:null}\n            <SelectCripto />\n            <SelectMonedas />\n            <Boton \n                type=\"submit\"\n                value=\"CONVERT\"\n            />\n        </form>\n    )\n}\n\nexport default Formulario\n\nconst Boton = styled.input`\n    margin-top: 36px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: transparent;\n    border: 2px solid blue;\n    width: 100%;\n    color: grey;\n    transition: background-color .3s ease;\n\n\n    &:hover {\n        background-color: transparent;\n        color: white;\n        cursor:pointer;\n    }\n\n    &:focus-visible{\n        outline:0.3px solid rgba(49, 216, 255, 0.9);\n    }\n`\n"]},"metadata":{},"sourceType":"module"}