{"version":3,"sources":["crypTOfiat.svg","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Footer.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["useMoneda","label","stateInicial","opciones","useState","state","actualizarState","Label","Select","onChange","e","target","value","map","opcion","codigo","nombre","styled","select","useCriptomoneda","CoinInfo","Name","FullName","Id","Error","mensaje","MensajeError","p","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","Boton","type","input","Cotizacion","Object","keys","length","console","log","ResultadoDiv","Imgprice","Collogo","Logo","src","IMAGEURL","Col","Precio","PRICE","Info","className","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","div","img","Footer","Foot","Row","Colimg","href","id","alt","footer","Spinner","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","Pagecont","Contenedor","Imgcont","Imagen","imagen","Heading","h1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc0a5fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/crypTOfiat.0c172a11.svg\";","import React, { Fragment, useState } from 'react'\nimport styled from \"@emotion/styled\";\n\n\nconst useMoneda = (label, stateInicial, opciones) => {\n    //State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const Seleccionar = () => (\n        <Fragment>\n           <Label>{}</Label> \n            <Select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">Fiat Currencies</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\n                ))}\n            </Select> \n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state.\n    return [state, Seleccionar, actualizarState]\n}\n\nexport default useMoneda;\n\nconst Label = styled.label`\n    font-family: Arial, Helvetica, sans-serif;\n    color: grey;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\n\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    --webkit-appearance: none;\n    border: 1px solid rgba(49, 216, 255, 0.9);\n    font-size: 1.1rem;\n    font-weight: 100 ;\n    color: white;\n    background-color: transparent;\n\n    &:focus-visible{\n        outline:0.3px solid blue;\n    }\n\n`","import React, { Fragment, useState } from 'react'\nimport styled from \"@emotion/styled\";\n\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n    //State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const SelectCripto = () => (\n        <Fragment>\n           <Label>{}</Label> \n            <Select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\"> Cryptocurrencies </option>\n                {opciones.map(opcion => (\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\n                ))}\n            </Select> \n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state.\n    return [state, SelectCripto, actualizarState]\n}\n\nexport default useCriptomoneda;\n\nconst Label = styled.label`\n    font-family: Arial, Helvetica, sans-serif;\n    color: grey;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\n\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    --webkit-appearance: none;\n    border: 1px solid rgba(49, 216, 255, 0.9);\n    font-size: 1.1rem;\n    font-weight: 100 ;\n    color: white;\n    background-color: transparent;\n    \n\n    &:focus-visible{\n        outline:0.3px solid blue;\n    }\n    \n`","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Error = ({mensaje}) => {\n    return (\n        <MensajeError>\n            {mensaje}\n        </MensajeError>\n    )\n}\n\nexport default Error\n\nconst MensajeError = styled.p`\n    color: rgb(255, 44, 44);\n    text-transform: uppercase;\n    margin-top:33px;\n    font-size: 20px;\n    letter-spacing: 2px;\n    text-align: center;\n    font-family: Arial, Helvetica, sans-serif;\n`;","import React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\"\nimport useCriptomoneda from \"../hooks/useCriptomoneda\"\nimport Error from \"./Error\";\nimport axios from \"axios\";\n\n\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\n    //state del listado criptomonedas\n    const [ listacripto, guardarCriptomonedas ] = useState([]);\n    const [ error, guardarError ] = useState(false);\n\n    const MONEDAS = [\n        { codigo: \"USD\", nombre: \"United States Dollar $ (USD)\" },\n        { codigo: \"ARS\", nombre: \"Argentine Peso $ (ARS)\" },\n        { codigo: \"PYG\", nombre: \"Paraguayan Guaraní ₲ (PYG)\" },\n        { codigo: \"MXN\", nombre: \"Mexican Peso $ (MXN)\" },\n        { codigo: \"EUR\", nombre: \"Euro € (EUR)\" },\n        { codigo: \"GBP\", nombre: \"Pound Sterling £ (GBP)\" },\n        { codigo: \"JPY\", nombre: \"Japanese Yen ¥ (JPY)\" },\n        { codigo: \"CRC\", nombre: \"Costa Rican Colón ₡ (CRC)\" },\n        { codigo: \"CAD\", nombre: \"Canadian Dollar $ (CAD)\" },\n    ]\n\n\n    //Utlizar useMoneda\n    const [ moneda, SelectMonedas ]= useMoneda(\"Elige tu moneda\", \"\", MONEDAS);\n   //Utilizar useCriptomoneda\n    const [ criptomoneda, SelectCripto ] = useCriptomoneda(\"Elige tu Criptomoneda\",\"\", listacripto);\n    //Ejecutar llamado a la API\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=100&tsym=USD\"\n\n            const resultado = await axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data)            \n        }\n        consultarAPI();\n    }, []);\n\n    // Cuando usuario hace submit\n    const cotizarMoneda = e =>{\n        e.preventDefault();\n    \n        // Validar si ambos campos estan llenos\n        if(moneda === \"\" || criptomoneda === \"\"){\n            guardarError(true);\n            return;\n        }\n        //pasar los datos al componente principal\n        guardarError(false);\n        guardarMoneda(moneda);\n        guardarCriptomoneda(criptomoneda);\n    }\n    return (  \n        <form\n            onSubmit={cotizarMoneda}\n        >\n            {error ?<Error mensaje=\"ALL FIELDS ARE REQUIRED\" />:null}\n            <SelectCripto />\n            <SelectMonedas />\n            <Boton \n                type=\"submit\"\n                value=\"CONVERT\"\n            />\n        </form>\n    )\n}\n\nexport default Formulario\n\nconst Boton = styled.input`\n    margin-top: 36px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: transparent;\n    background-image: linear-gradient(to right, transparent, rgb(0, 34, 255));\n    border-radius: 0px 90px 90px 0px;\n    border:none;\n    width: 100%;\n    color: #b0bdff;\n    transition: 250ms;\n\n\n    &:hover {\n        background-image: linear-gradient(to right, transparent, #31d8ff);\n        color: white;\n        cursor:pointer;\n        letter-spacing: 1px;\n    }\n\n    &:focus-visible{\n        border:1px solid rgba(49, 216, 255, 0.9);\n        border-radius: 0px 90px 90px 0px;\n        outline:none;\n        -moz-outline-radius: 50px;\n    }\n`\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Cotizacion = ({resultado}) => {\n    if(Object.keys(resultado).length === 0) return null;\n    console.log(resultado)\n\n    return (\n       <ResultadoDiv>\n            <Imgprice>\n                <Collogo>\n                    <Logo src={\t`https://www.cryptocompare.com/${resultado.IMAGEURL}`}></Logo>\n                </Collogo>\n                <Col>\n                    <Precio>\n                        {resultado.PRICE}\n                        <Info>{\"High: \"} \n                            <span className=\"green\">\n                                {resultado.HIGHDAY}\n                            </span>\n                        </Info> \n                        <Info> {\"Low: \"}    \n                            <span className=\"red\">\n                                {resultado.LOWDAY}\n                            </span>\n                        </Info> \n                        <Info>{\"24hs: \"}\n                            <span className=\"grey\"> \n                            {resultado.CHANGEPCT24HOUR}%\n                            </span>{/* <Info>Last Update: <span className=\"grey\">{resultado.LASTUPDATE}</span> </Info> */}\n                        </Info>\n                    </Precio>\n                </Col>\n            </Imgprice>\n       </ResultadoDiv>\n    );\n}\n\nexport default Cotizacion\n\nconst ResultadoDiv = styled.div`\n    background-image: linear-gradient(to right, white, white,transparent);\n    color: black;\n    border: none;\n    border-radius: 90px 0px 0px 90px;\n    margin-top:24px ;\n    padding: 6px 18px 6px 18px;\n    min-height: 13vh;\n    max-height: 16vh;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    justify-content: space-evenly\n`;\n\nconst Imgprice = styled.div`\n    display: flex;\n    align-items: center;\n    align-self: flex-start;\n    justify-content: space-evenly;\n    margin-left: 12px;\n`\nconst Collogo = styled.div`\n    display: flex;\n`\nconst Col = styled.div`\n    display: flex;\n    flex-direction:row;\n    justify-content: space-evenly;   \n`\n\nconst Precio = styled.p`\n    font-size: 3vh;\n    color:black;\n    font-weight:bold;\n    letter-spacing: -2px;\n\n`\nconst Info = styled.p`\n    margin-top: 2px;\n    margin-bottom: 0px;\n    color: grey;\n    font-size: 1.6vh;\n    font-weight:lighter;\n    letter-spacing: 0;\n    span {\n        letter-spacing: -0.9px;\n    }\n`;\n\nconst Logo = styled.img`\n    max-height: 100px;\n    margin-right: 21px;\n`\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Footer = () => {\n    return (\n        <Foot>\n            <Row>\n                <Colimg>\n                    <a href=\"mailto:alexisdealmeyda@gmail.com\" id=\"logo\">\n                    <img src=\"/images/envelope.svg\" alt=\"E-mail\" />\n                    </a>\n                </Colimg>\n                <Col>\n                    <p>ALEXIS DE ALMEYDA © 2021</p>\n                </Col>\n                <Colimg>\n                    <a href=\"https://github.com/AlexisTercero\" id=\"logo\">\n                    <img src=\"/images/github.svg\" alt=\"GitHubLogo\" />\n                    </a>\n                </Colimg>\n            </Row>        \n        </Foot>\n    )\n}\n\nexport default Footer\n\n\n\nconst Foot = styled.div`\n    color:grey;\n    font-size: 12px;\n    font-style: oblique;\n    box-shadow: 0px 9px 12px #b0bdff;\n    background-color: #000212;\n    padding-top: 0.3em;\n    padding-left: 9px;\n    padding-right: 9px;\n    position: relative;\n    bottom: 0;\n    min-width: 100vw;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Row = styled.footer`\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    \n`\nconst Colimg = styled.div`\n    width: 27px;\n    opacity: 50%;\n    &:hover{\n        opacity: 80%;\n    }\n`\n\n\nconst Col = styled.div`\n    \n`\n\n","import React from 'react';\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"sk-chase\">\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React,{ useState, useEffect } from 'react';\nimport styled from \"@emotion/styled\"\nimport axios from \"axios\";\nimport imagen from \"./crypTOfiat.svg\"\nimport Formulario from \"./components/Formulario\"\nimport Cotizacion from \"./components/Cotizacion\"\nimport Footer from \"./components/Footer\"\nimport Spinner from \"./components/Spinner\"\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [criptomoneda, guardarCriptomoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState ({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(()=>{\n    const cotizarCriptomoneda = async () => {\n      //evitamos la ejecucion la primera vez\n      if(moneda===\"\") return;\n      //Consultar API para obtener la cotizacion\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      // Mostrar Spinner\n      guardarCargando(true);\n\n      //ocultar el Spinner y mostrar el resultado\n      setTimeout(()=>{\n        //Cambiar estado de cargando\n        guardarCargando(false);\n\n        //Guardar cotizacion\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      },3000);\n      \n    }\n    cotizarCriptomoneda();\n  },[moneda, criptomoneda]);\n\n  // Mostrar spinner ó resultado\n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado} />\n\n  return (\n    <Pagecont>\n    <Contenedor>\n      <Imgcont>\n        <Imagen \n          src={imagen} \n          alt=\"imagen crypto\"\n        />\n      </Imgcont>\n      <div>\n        <Heading>        \n        </Heading>\n        <Formulario \n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n      {componente}\n      </div>      \n    </Contenedor>  \n    <Footer /> \n    </Pagecont>\n  );\n}\n\nexport default App;\n\nconst Pagecont = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  margin: 0 auto;\n`\n\nconst Contenedor = styled.div`\n  max-width: 60vw;\n  min-width: 60vw;\n  margin: 0 auto;\n  margin-top: 3rem;\n  flex:1;\n\n  @media (min-width:992px) {\n  }\n`\nconst Imgcont = styled.div`\n`\n\nconst Imagen = styled.img`\n  max-width:24vw;\n  min-width: 175px;\n  margin-top: 0rem;\n` \n\nconst Heading = styled.h1`\n  color: transparent;\n  font-size: 1px;\n\n  &::after {\n    content: \"\";\n    width: 100%;\n    margin-top: 3px;\n    height: 2px;\n    background-image: linear-gradient(to right,rgb(0, 34, 255), transparent);\n    display: block;\n  }\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}